// =========================================================================
// word_mappings.h - Mappature per la visualizzazione delle parole sul display
// Contiene le coordinate e le lettere per l'orologio OraQuadra
// =========================================================================

#ifndef WORD_MAPPINGS_H
#define WORD_MAPPINGS_H

#include <stdint.h>  // Per uint8_t
#include <Arduino.h> // Per PROGMEM

// ===============================================
// DEFINIZIONE PAROLE BASE
// ===============================================

// Parole comuni
const uint8_t PROGMEM WORD_DAVIDE[] = {25,41,57,73,89,105,69,70,71,72,73,4};
const uint8_t PROGMEM WORD_PAOLO[] = {92,108,124,140,156,133,134,135,136,137,138,139,140,141,142,4};
const uint8_t PROGMEM WORD_ALE[] = {99,115,131,147,163,179,195,211,227,243,177,178,179,180,181,182,183,184,185,186,187,4};

const uint8_t PROGMEM WORD_SONO_LE[] = {0,1,2,3,5,6,8,9,10,4}; //
const uint8_t PROGMEM WORD_E[] = {116, 4};
const uint8_t PROGMEM WORD_MINUTI[] = {250,251,252,253,254,255,4};
// Parola speciale per mezzanotte
const uint8_t WORD_MEZZANOTTE[] PROGMEM = {6,7,8,9,10,11,12,13,14,15,4};
// ===============================================
// DEFINIZIONE PAROLE ORE
// ===============================================

const uint8_t PROGMEM WORD_ZERO[] = {12,13,14,15,4};
const uint8_t PROGMEM WORD_UNA[] = {57,73,89,4};
const uint8_t PROGMEM WORD_DUE[] = {96,112,128,4};
const uint8_t PROGMEM WORD_TRE[] = {21,22,23,4};
const uint8_t PROGMEM WORD_QUATTRO[] = {56,57,58,59,60,61,62,4};
const uint8_t PROGMEM WORD_CINQUE[] = {33,49,65,81,97,113,4};
const uint8_t PROGMEM WORD_SEI[] = {45,46,47,4};
const uint8_t PROGMEM WORD_SETTE[] = {91,92,93,94,95,4};
const uint8_t PROGMEM WORD_OTTO[] = {28,29,30,31,4};
const uint8_t PROGMEM WORD_NOVE[] = {106,107,108,109,4};
const uint8_t PROGMEM WORD_DIECI[] = {75,76,77,78,79,4};
const uint8_t PROGMEM WORD_UNDICI[] = {50,51,52,53,54,55,4};
const uint8_t PROGMEM WORD_DODICI[] = {98,99,100,101,102,103,4};
const uint8_t PROGMEM WORD_TREDICI[] = {21,22,23,24,25,26,27,4};
const uint8_t PROGMEM WORD_QUATTORDICI[] = {34,35,36,37,38,39,40,41,42,43,44,4};
const uint8_t PROGMEM WORD_QUINDICI[] = {34,50,66,82,98,114,130,146,4};
const uint8_t PROGMEM WORD_SEDICI[] = {83,84,85,86,87,88,4};
const uint8_t PROGMEM WORD_DICIASSETTE[] = {85,86,87,88,89,90,91,92,93,94,95,4};
const uint8_t PROGMEM WORD_DICIOTTO[] = {24,25,26,27,28,29,30,31,4};
const uint8_t PROGMEM WORD_DICIANNOVE[] = {100,101,102,103,104,105,106,107,108,109,4};
const uint8_t PROGMEM WORD_VENTI[] = {16,32,48,64,80,4};
const uint8_t PROGMEM WORD_VENTUNO[] = {68,69,70,71,72,73,74,4};
const uint8_t PROGMEM WORD_VENTIDUE[] = {16,32,48,64,80,96,112,128,4};
const uint8_t PROGMEM WORD_VENTITRE[] = {16,17,18,19,20,21,22,23,4};

// Array puntatori alle parole ore
const uint8_t* const HOUR_WORDS[] PROGMEM = {
    WORD_ZERO,        // 0
    WORD_UNA,         // 1
    WORD_DUE,         // 2
    WORD_TRE,         // 3
    WORD_QUATTRO,     // 4
    WORD_CINQUE,      // 5
    WORD_SEI,         // 6
    WORD_SETTE,       // 7
    WORD_OTTO,        // 8
    WORD_NOVE,        // 9
    WORD_DIECI,       // 10
    WORD_UNDICI,      // 11
    WORD_DODICI,      // 12
    WORD_TREDICI,     // 13
    WORD_QUATTORDICI, // 14
    WORD_QUINDICI,    // 15
    WORD_SEDICI,      // 16
    WORD_DICIASSETTE, // 17
    WORD_DICIOTTO,    // 18
    WORD_DICIANNOVE,  // 19
    WORD_VENTI,       // 20
    WORD_VENTUNO,     // 21
    WORD_VENTIDUE,    // 22
    WORD_VENTITRE     // 23
};

// ===============================================
// DEFINIZIONE PAROLE MINUTI
// ===============================================

const uint8_t PROGMEM WORD_MUNO[] = {157,158,159,4};
const uint8_t PROGMEM WORD_MUN[] = {224,225,4};
const uint8_t PROGMEM WORD_MDUE[] = {246,247,248,4};
const uint8_t PROGMEM WORD_MTRE[] = {210,211,212,4};
const uint8_t PROGMEM WORD_MQUATTRO[] = {192,193,194,195,196,197,198,4};
const uint8_t PROGMEM WORD_MCINQUE[] = {240,241,242,243,244,245,4};
const uint8_t PROGMEM WORD_MSEI[] = {237,238,239,4};
const uint8_t PROGMEM WORD_MSETTE[] = {219,220,221,222,223,4};
const uint8_t PROGMEM WORD_MOTTO[] = {172,173,174,175,4};
const uint8_t PROGMEM WORD_MNOVE[] = {232,233,234,235,4};
const uint8_t PROGMEM WORD_MDIECI[] = {176,177,178,179,180,4};
const uint8_t PROGMEM WORD_MUNDICI[] = {224,225,226,227,228,229,4};
const uint8_t PROGMEM WORD_MDODICI[] = {166,167,168,169,170,171,4};
const uint8_t PROGMEM WORD_MTREDICI[] = {210,211,212,213,214,215,216,4};
const uint8_t PROGMEM WORD_MQUATTORDICI[] = {181,182,183,184,185,186,187,188,189,190,191,4};
const uint8_t PROGMEM WORD_MQUINDICI[] = {199,200,201,202,203,204,205,206,4};
const uint8_t PROGMEM WORD_MSEDICI[] = {160,161,162,163,164,165,4};
const uint8_t PROGMEM WORD_MDICIASSETTE[] = {213,214,215,216,217,218,219,220,221,222,223,4};
const uint8_t PROGMEM WORD_MDICIOTTO[] = {168,169,170,171,172,173,174,175,4};
const uint8_t PROGMEM WORD_MDICIANNOVE[] = {226,227,228,229,230,231,232,233,234,235,4};
const uint8_t PROGMEM WORD_MVENT[] = {133,134,135,136,4};
const uint8_t PROGMEM WORD_MVENTI[] = {133,134,135,136,137,4};
const uint8_t PROGMEM WORD_MTRENT[] = {138,139,140,141,142,4};
const uint8_t PROGMEM WORD_MTRENTA[] = {138,139,140,141,142,143,4};
const uint8_t PROGMEM WORD_MQUARANT[] = {119,120,121,122,123,124,125,4};
const uint8_t PROGMEM WORD_MQUARANTA[] = {119,120,121,122,123,124,125,126,4};
const uint8_t PROGMEM WORD_MCINQUANT[] = {148,149,150,151,152,153,154,155,4};
const uint8_t PROGMEM WORD_MCINQUANTA[] = {148,149,150,151,152,153,154,155,156,4};

// Array puntatori alle parole minuti (1-19)
const uint8_t* const MINUTE_WORDS[] PROGMEM = {
    nullptr,           // 0
    WORD_MUNO,         // 1
    WORD_MDUE,         // 2
    WORD_MTRE,         // 3
    WORD_MQUATTRO,     // 4
    WORD_MCINQUE,      // 5
    WORD_MSEI,         // 6
    WORD_MSETTE,       // 7
    WORD_MOTTO,        // 8
    WORD_MNOVE,        // 9
    WORD_MDIECI,       // 10
    WORD_MUNDICI,      // 11
    WORD_MDODICI,      // 12
    WORD_MTREDICI,     // 13
    WORD_MQUATTORDICI, // 14
    WORD_MQUINDICI,    // 15
    WORD_MSEDICI,      // 16
    WORD_MDICIASSETTE, // 17
    WORD_MDICIOTTO,    // 18
    WORD_MDICIANNOVE   // 19
};

// Struttura per le decine
struct MinuteTens {
    const uint8_t* normal;
    const uint8_t* truncated;
};

// Array di decine (20, 30, 40, 50)
const MinuteTens TENS_WORDS[] PROGMEM = {
    {WORD_MVENTI, WORD_MVENT},         // 20
    {WORD_MTRENTA, WORD_MTRENT},       // 30
    {WORD_MQUARANTA, WORD_MQUARANT},   // 40
    {WORD_MCINQUANTA, WORD_MCINQUANT}  // 50
};

// ===============================================
// MAPPATURA COORDINATE DISPLAY
// ===============================================

// Coordinate X della matrice di caratteri
const int TFT_X[] PROGMEM = {
    7,37,67,97,127,157,187,217,247,277,307,337,367,397,427,457,
    7,37,67,97,127,157,187,217,247,277,307,337,367,397,427,457,
    7,37,67,97,127,157,187,217,247,277,307,337,367,397,427,457,
    7,37,67,97,127,157,187,217,247,277,307,337,367,397,427,457,
    7,37,67,97,127,157,187,217,247,277,307,337,367,397,427,457,
    7,37,67,97,127,157,187,217,247,277,307,337,367,397,427,457,
    7,37,67,97,127,157,187,217,247,277,307,337,367,397,427,457,
    7,37,67,97,127,157,187,217,247,277,307,337,367,397,427,457,
    7,37,67,97,127,157,187,217,247,277,307,337,367,397,427,457,
    7,37,67,97,127,157,187,217,247,277,307,337,367,397,427,457,
    7,37,67,97,127,157,187,217,247,277,307,337,367,397,427,457,
    7,37,67,97,127,157,187,217,247,277,307,337,367,397,427,457,
    7,37,67,97,127,157,187,217,247,277,307,337,367,397,427,457,
    7,37,67,97,127,157,187,217,247,277,307,337,367,397,427,457,
    7,37,67,97,127,157,187,217,247,277,307,337,367,397,427,457,
    7,37,67,97,127,157,187,217,247,277,307,337,367,397,427,457
};

// Coordinate Y della matrice di caratteri
const int TFT_Y[] PROGMEM = {
    25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,
    55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,
    85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
    115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,
    145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,
    175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,
    205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,
    235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,
    265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,
    295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,
    325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,
    355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,
    385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,
    415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,
    445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,
    475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475
};

// Caratteri da visualizzare nella matrice
char TFT_L[] = "SONOULEYOREXZEROVENTITREDICIOTTOECQUATTORDICISEINIUNDICIQUATTROOTNIJVENTUNODIECIIQNSEDICIASSETTEDUDODICIANNOVELFUEIHELPQUARANTAXERCKUVENTITRENTAGRINCINQUANTAUNOSEDICIDODICIOTTODIECIQUATTORDICIQUATTROQUINDICIOARTREDICIASSETTEUNDICIANNOVEOSEICINQUEDUEUMINUTI";
char TFT_L_INTRO[] = "ETYUIGSILMDASCVGHBNWTHLPXDFGNRSFDVRAZXGNRAXDVRBTHLPXWVFGNVSFBHKAAZFGNGATTIDVRBTBPXWVBNWFBDBHPPXWTHLADVRBHEXDADVRDVRLAZXBNWBHOFBHFGNEFSAMBINELLOBFBHSDVRFBAZXOGNRXDBSVGHBNWTHLPXWDSPAGNOLETTIGBNWGNRNETYUIGSILMDATHLDSCVGHBNWTHLPBNWRGNRSFBHKAZXDFBHODVRBTBUNIMRS";

const uint8_t PROGMEM WORD_CONNESSIONE[] = {48,49,50,51,52,53,54,55,56,57,58,64,65,66,67,68,4};
const uint8_t PROGMEM WORD_CONNESS0[] = {160,161,162,163,164,165,166,167,168,4};

/*
ETYUIGSILMDASCVG
HBNWTHLPXDFGNRSF
DVRAZXGNRAXDVRBT
CONNESSIONEDGDHF
WIFI:DFFDHGFHFDF
THLADVRBHEXDADVR
................
FBHODVRBTBUNIMRS
DVRLAZXBNWBHOFBH
FGNEFSAMBINELLOB
CONNESSO:DFHGFHG
000.000.000.000R
DSPAGNOLETTIGBNW
GNRNETYUIGSILMDA
THLDSCVGHBNWTHLP
BNWRGNRSFBHKAZXD
*/



 //--------------------------------------------------------------------------------------------------------
// 1. Movimento orizzontale da sinistra a destra, partendo dall'angolo in alto a sinistra
const uint16_t LED_PATH_HORIZ_LEFT_TO_RIGHT_TOP[256] = {
  15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0,
  31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16,
  47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32,
  63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48,
  79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64,
  95, 92, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80,
  111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96,
  127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112,
  143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128,
  159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144,
  175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160,
  191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176,
  207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192,
  223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 210, 209, 208,
  239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224,
  255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240
};

// 2. Movimento orizzontale da destra a sinistra, partendo dall'angolo in alto a destra
const uint16_t LED_PATH_HORIZ_RIGHT_TO_LEFT_TOP[256] = {
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
  64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
  80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95,
  96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
  112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
  128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
  144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
  160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
  176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
  192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
  208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
  224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
  240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255
};

// 3. Movimento orizzontale da sinistra a destra, partendo dall'angolo in basso a sinistra
const uint16_t LED_PATH_HORIZ_LEFT_TO_RIGHT_BOTTOM[256] = {
  240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255,
  224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
  208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
  192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
  176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
  160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
  144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
  128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
  112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
  96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
  80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95,
  64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
};

// 4. Movimento orizzontale da destra a sinistra, partendo dall'angolo in basso a destra
const uint16_t LED_PATH_HORIZ_RIGHT_TO_LEFT_BOTTOM[256] = {
  255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240,
  239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224,
  223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208,
  207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192,
  191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176,
  175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160,
  159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144,
  143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128,
  127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112,
  111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96,
  95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80,
  79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64,
  63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48,
  47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32,
  31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16,
  15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0
};

// 5. Movimento verticale dall'alto al basso, partendo dall'angolo in alto a sinistra
const uint16_t LED_PATH_VERT_TOP_TO_BOTTOM_LEFT[256] = {
  15, 16, 47, 48, 79, 80, 111, 112, 143, 144, 175, 176, 207, 208, 239, 240,
  241, 238, 209, 206, 177, 174, 145, 142, 113, 110, 81, 78, 49, 46, 17, 14,
  13, 18, 45, 50, 77, 82, 109, 114, 141, 146, 173, 178, 205, 210, 237, 242,
  243, 236, 211, 204, 179, 172, 147, 140, 115, 108, 83, 76, 51, 44, 19, 12,
  11, 20, 43, 52, 75, 84, 107, 116, 139, 148, 171, 180, 203, 212, 235, 244,
  245, 234, 213, 202, 181, 170, 149, 138, 117, 106, 85, 74, 53, 42, 21, 10,
  9, 22, 41, 54, 73, 86, 105, 118, 137, 150, 169, 182, 201, 214, 233, 246,
  247, 232, 215, 200, 183, 168, 151, 136, 119, 104, 87, 72, 55, 40, 23, 8,
  7, 24, 39, 56, 71, 88, 103, 120, 135, 152, 167, 184, 199, 216, 231, 248,
  249, 230, 217, 198, 185, 166, 153, 134, 121, 102, 89, 70, 57, 38, 25, 6,
  5, 26, 37, 58, 69, 90, 101, 122, 133, 154, 165, 186, 197, 218, 229, 250,
  251, 228, 219, 196, 187, 164, 155, 132, 123, 100, 91, 68, 59, 36, 27, 4,
  3, 28, 35, 60, 67, 92, 99, 124, 131, 156, 163, 188, 195, 220, 227, 252,
  253, 226, 221, 194, 189, 162, 157, 130, 125, 98, 93, 66, 61, 34, 29, 2,
  1, 30, 33, 62, 65, 94, 97, 126, 129, 158, 161, 190, 193, 222, 225, 254,
  255, 224, 223, 192, 191, 160, 159, 128, 127, 96, 95, 64, 63, 32, 31, 0
};

// 6. Movimento verticale dal basso all'alto, partendo dall'angolo in basso a sinistra
const uint16_t LED_PATH_VERT_BOTTOM_TO_TOP_LEFT[256] = {
  240, 239, 208, 207, 176, 175, 144, 143, 112, 111, 80, 79, 48, 47, 16, 15,
  14, 17, 46, 49, 78, 81, 110, 113, 142, 145, 174, 177, 206, 209, 238, 241,
  242, 237, 210, 205, 178, 173, 146, 141, 114, 109, 82, 77, 50, 45, 18, 13,
  12, 19, 44, 51, 76, 83, 108, 115, 140, 147, 172, 179, 204, 211, 236, 243,
  244, 235, 212, 203, 180, 171, 148, 139, 116, 107, 84, 75, 52, 43, 20, 11,
  10, 21, 42, 53, 74, 85, 106, 117, 138, 149, 170, 181, 202, 213, 234, 245,
  246, 233, 214, 201, 182, 169, 150, 137, 118, 105, 86, 73, 54, 41, 22, 9,
  8, 23, 40, 55, 72, 87, 104, 119, 136, 151, 168, 183, 200, 215, 232, 247,
  248, 231, 216, 199, 184, 167, 152, 135, 120, 103, 88, 71, 56, 39, 24, 7,
  6, 25, 38, 57, 70, 89, 102, 121, 134, 153, 166, 185, 198, 217, 230, 249,
  250, 229, 218, 197, 186, 165, 154, 133, 122, 101, 90, 69, 58, 37, 26, 5,
  4, 27, 36, 59, 68, 91, 100, 123, 132, 155, 164, 187, 196, 219, 228, 251,
  252, 227, 220, 195, 188, 163, 156, 131, 124, 99, 92, 67, 60, 35, 28, 3,
  2, 29, 34, 61, 66, 93, 98, 125, 130, 157, 162, 189, 194, 221, 226, 253,
  254, 225, 222, 193, 190, 161, 158, 129, 126, 97, 94, 65, 62, 33, 30, 1,
  0, 31, 32, 63, 64, 95, 96, 127, 128, 159, 160, 191, 192, 223, 224, 255
};

// 7. Movimento verticale dall'alto al basso, partendo dall'angolo in alto a destra
const uint16_t LED_PATH_VERT_TOP_TO_BOTTOM_RIGHT[256] = {
  0, 31, 32, 63, 64, 95, 96, 127, 128, 159, 160, 191, 192, 223, 224, 255,
  254, 225, 222, 193, 190, 161, 158, 129, 126, 97, 94, 65, 62, 33, 30, 1,
  2, 29, 34, 61, 66, 93, 98, 125, 130, 157, 162, 189, 194, 221, 226, 253,
  252, 227, 220, 195, 188, 163, 156, 131, 124, 99, 92, 67, 60, 35, 28, 3,
  4, 27, 36, 59, 68, 91, 100, 123, 132, 155, 164, 187, 196, 219, 228, 251,
  250, 229, 218, 197, 186, 165, 154, 133, 122, 101, 90, 69, 58, 37, 26, 5,
  6, 25, 38, 57, 70, 89, 102, 121, 134, 153, 166, 185, 198, 217, 230, 249,
  248, 231, 216, 199, 184, 167, 152, 135, 120, 103, 88, 71, 56, 39, 24, 7,
  8, 23, 40, 55, 72, 87, 104, 119, 136, 151, 168, 183, 200, 215, 232, 247,
  246, 233, 214, 201, 182, 169, 150, 137, 118, 105, 86, 73, 54, 41, 22, 9,
  10, 21, 42, 53, 74, 85, 106, 117, 138, 149, 170, 181, 202, 213, 234, 245,
  244, 235, 212, 203, 180, 171, 148, 139, 116, 107, 84, 75, 52, 43, 20, 11,
  12, 19, 44, 51, 76, 83, 108, 115, 140, 147, 172, 179, 204, 211, 236, 243,
  242, 237, 210, 205, 178, 173, 146, 141, 114, 109, 82, 77, 50, 45, 18, 13,
  14, 17, 46, 49, 78, 81, 110, 113, 142, 145, 174, 177, 206, 209, 238, 241,
  240, 239, 208, 207, 176, 175, 144, 143, 112, 111, 80, 79, 48, 47, 16, 15
};

// 8. Movimento verticale dal basso all'alto, partendo dall'angolo in basso a destra
const uint16_t LED_PATH_VERT_BOTTOM_TO_TOP_RIGHT[256] = {
  255, 224, 223, 192, 191, 160, 159, 128, 127, 96, 95, 64, 63, 32, 31, 0,
  1, 30, 33, 62, 65, 94, 97, 126, 129, 158, 161, 190, 193, 222, 225, 254,
  253, 226, 221, 194, 189, 162, 157, 130, 125, 98, 93, 66, 61, 34, 29, 2,
  3, 28, 35, 60, 67, 92, 99, 124, 131, 156, 163, 188, 195, 220, 227, 252,
  251, 228, 219, 196, 187, 164, 155, 132, 123, 100, 91, 68, 59, 36, 27, 4,
  5, 26, 37, 58, 69, 90, 101, 122, 133, 154, 165, 186, 197, 218, 229, 250,
  249, 230, 217, 198, 185, 166, 153, 134, 121, 102, 89, 70, 57, 38, 25, 6,
  7, 24, 39, 56, 71, 88, 103, 120, 135, 152, 167, 184, 199, 216, 231, 248,
  247, 232, 215, 200, 183, 168, 151, 136, 119, 104, 87, 72, 55, 40, 23, 8,
  9, 22, 41, 54, 73, 86, 105, 118, 137, 150, 169, 182, 201, 214, 233, 246,
  245, 234, 213, 202, 181, 170, 149, 138, 117, 106, 85, 74, 53, 42, 21, 10,
  11, 20, 43, 52, 75, 84, 107, 116, 139, 148, 171, 180, 203, 212, 235, 244,
  243, 236, 211, 204, 179, 172, 147, 140, 115, 108, 83, 76, 51, 44, 19, 12,
  13, 18, 45, 50, 77, 82, 109, 114, 141, 146, 173, 178, 205, 210, 237, 242,
  241, 238, 209, 206, 177, 174, 145, 142, 113, 110, 81, 78, 49, 46, 17, 14,
  15, 16, 47, 48, 79, 80, 111, 112, 143, 144, 175, 176, 207, 208, 239, 240
}; 




#endif // WORD_MAPPINGS_H
